{"ast":null,"code":"var _jsxFileName = \"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useForm } from \"react-hook-form\";\nimport get from \"lodash/get\"; //get(obj, path, [defaultValue])\n\nimport { Link } from \"react-router-dom\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { authService } from \"../../services/auth.service\"; //Các mothod liên quan đến gọi api ở backend\n\nimport { Button } from \"../../components/button/button\";\nimport { getMess } from \"../../util/message\"; //Liên quan đến các messenger thông báo\n\nimport { patternEmail } from \"../../util/form\"; //Liên quan về phần vidation mail\n\nimport { Field } from \"../../components/Field/Field\";\nimport { user } from \"../../util/user\"; //\n\nimport logo from \"../../assets/image/logo.JPG\"; //logo\n\nimport \"./Login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = get(props, \"history\", {});\n  const stateHistory = history.location.state || {};\n  const [apiError, setApiError] = useState(stateHistory.expired ? getMess(\"M15\") : \"\"); //Tương tự componentDidMount\n\n  useEffect(() => {\n    const userInfo = user.getUserInfo();\n    const unLogin = isEmpty(userInfo);\n\n    if (!unLogin) {\n      if (userInfo.status === \"defer\") return history.push(\"/verify\");\n      return history.push(\"/\");\n    }\n  }, []);\n\n  const onSubmit = formState => {\n    setApiError(\"\");\n    authService.login(formState).then(res => {\n      user.saveUserStorage(res.token);\n      console.log(\"StateHistory: \", stateHistory.prePath);\n      return history.push(stateHistory.prePath || \"/home\");\n    }).catch(err => {\n      const requiredNewPassCode = 401;\n\n      if (err.code === requiredNewPassCode) {\n        return history.push(`/change-password/${formState.email}`);\n      }\n\n      return setApiError(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"login-content\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"login__paper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login__form\",\n          noValidate: true,\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              className: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Welcome Back!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: \"\\\"\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: apiError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n            variant: \"outlined\",\n            label: \"Email address\",\n            name: \"email\",\n            required: true,\n            inputRef: register({\n              required: getMess(\"M01\", \"Email address\"),\n              pattern: {\n                value: patternEmail,\n                message: getMess(\"M05\")\n              }\n            }),\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            helperText: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n            label: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            variant: \"outlined\",\n            required: true,\n            inputRef: register({\n              required: getMess(\"M01\", \"Password\")\n            }),\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"forgot-password-link\",\n            to: \"/forgotpassword\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Continue\",\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            classes: \"button-login\",\n            disableElevation: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-link\",\n            children: [\"Don't have an account?\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"ADuR7NfsYHiralgFcwsfChuF+So=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport { Login };\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Login/Login.jsx"],"names":["React","useState","useEffect","Grid","Typography","useForm","get","Link","isEmpty","authService","Button","getMess","patternEmail","Field","user","logo","Login","props","register","handleSubmit","errors","history","stateHistory","location","state","apiError","setApiError","expired","userInfo","getUserInfo","unLogin","status","push","onSubmit","formState","login","then","res","saveUserStorage","token","console","log","prePath","catch","err","requiredNewPassCode","code","email","message","required","pattern","value","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport get from \"lodash/get\"; //get(obj, path, [defaultValue])\r\nimport { Link } from \"react-router-dom\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { authService } from \"../../services/auth.service\"; //Các mothod liên quan đến gọi api ở backend\r\nimport { Button } from \"../../components/button/button\";\r\nimport { getMess } from \"../../util/message\"; //Liên quan đến các messenger thông báo\r\nimport { patternEmail } from \"../../util/form\"; //Liên quan về phần vidation mail\r\nimport { Field } from \"../../components/Field/Field\";\r\nimport { user } from \"../../util/user\"; //\r\nimport logo from \"../../assets/image/logo.JPG\"; //logo\r\nimport \"./Login.scss\";\r\n\r\nfunction Login(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = get(props, \"history\", {});\r\n  const stateHistory = history.location.state || {};\r\n\r\n  const [apiError, setApiError] = useState(\r\n    stateHistory.expired ? getMess(\"M15\") : \"\"\r\n  );\r\n\r\n  //Tương tự componentDidMount\r\n  useEffect(() => {\r\n    const userInfo = user.getUserInfo();\r\n    const unLogin = isEmpty(userInfo);\r\n    if (!unLogin) {\r\n      if (userInfo.status === \"defer\") return history.push(\"/verify\");\r\n      return history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (formState) => {\r\n    setApiError(\"\");\r\n\r\n    authService\r\n      .login(formState)\r\n      .then((res) => {\r\n        user.saveUserStorage(res.token);\r\n        console.log(\"StateHistory: \", stateHistory.prePath );\r\n        return history.push(stateHistory.prePath || \"/home\");\r\n      })\r\n      .catch((err) => {\r\n        const requiredNewPassCode = 401;\r\n\r\n        if (err.code === requiredNewPassCode) {\r\n          return history.push(`/change-password/${formState.email}`);\r\n        }\r\n\r\n        return setApiError(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"login\">\r\n      <Grid container className=\"login-content\">\r\n        <Grid item className=\"login__paper\">\r\n          <form\r\n            className=\"login__form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img src={logo} className=\"logo\"></img>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Welcome Back!\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                \"\"\r\n              </Typography>\r\n            </Grid>\r\n            <p className=\"error-text\">{apiError}</p>\r\n            <Field\r\n              helperText={errors.email?.message}\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess(\"M01\", \"Email address\"),\r\n                pattern: {\r\n                  value: patternEmail,\r\n                  message: getMess(\"M05\"),\r\n                },\r\n              })}\r\n              notRightLabel\r\n            />\r\n\r\n            <Field\r\n              helperText={errors.password?.message}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess(\"M01\", \"Password\"),\r\n              })}\r\n              notRightLabel\r\n            />\r\n            <Link className=\"forgot-password-link\" to=\"/forgotpassword\">\r\n              <p>Forgot password?</p>\r\n            </Link>\r\n            <Button\r\n              text=\"Continue\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              classes=\"button-login\"\r\n              disableElevation\r\n            />\r\n            <div className=\"register-link\">\r\n              Don&apos;t have an account?&nbsp;\r\n              <Link to=\"/register\">\r\n                <p>Sign up</p>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n"]},"metadata":{},"sourceType":"module"}