{"ast":null,"code":"import moment from 'moment';\n\nconst getUserStorage = () => {\n  const userInfo = localStorage.getItem('userInfo'); //Lấy chuỗi token trên localStorage\n\n  if (!userInfo) {\n    return {};\n  }\n\n  return JSON.parse(userInfo);\n};\n\nconst saveUserStorage = userInfo => {\n  localStorage.setItem('userInfo', JSON.stringify(userInfo));\n};\n\nconst parseJwt = token => {\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`).join(''));\n  return JSON.parse(jsonPayload);\n};\n\nconst getUserInfo = () => {\n  const userStorage = getUserStorage();\n\n  if (userStorage.accessToken) {\n    const userParse = parseJwt(userStorage.accessToken);\n    return {\n      role: 'admin',\n      // firstName: userParse.firstName,\n      // lastName: userParse.lastName,\n      idToken: userStorage.accessToken,\n      refreshToken: userStorage.refreshToken,\n      exp: userParse.exp,\n      email: userParse.user.email,\n      status: userParse.user.status,\n      id: userParse.user._id\n    };\n  }\n\n  return {};\n};\n\nconst checkRememberMe = (e, checked) => {\n  const date = moment();\n\n  if (checked) {\n    return localStorage.setItem('rememberMe', JSON.stringify(date));\n  }\n\n  return localStorage.removeItem('rememberMe');\n};\n\nconst checkRememberMeExpired = () => {\n  const dateRememberMe = localStorage.getItem('rememberMe');\n  const expiredTimeRememberMe = 5; // days\n\n  let isRememberMeExpired = false;\n\n  if (dateRememberMe) {\n    const dateParse = JSON.parse(dateRememberMe);\n    const nowDate = moment();\n    isRememberMeExpired = nowDate.diff(dateParse, 'days', true) > expiredTimeRememberMe;\n  }\n\n  return {\n    isRememberMeExpired,\n    hasCheckRememberMe: !!dateRememberMe\n  };\n};\n\nexport const user = {\n  getUserInfo,\n  checkRememberMeExpired,\n  checkRememberMe,\n  saveUserStorage\n};","map":{"version":3,"sources":["/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/user.js"],"names":["moment","getUserStorage","userInfo","localStorage","getItem","JSON","parse","saveUserStorage","setItem","stringify","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","getUserInfo","userStorage","accessToken","userParse","role","idToken","refreshToken","exp","email","user","status","id","_id","checkRememberMe","e","checked","date","removeItem","checkRememberMeExpired","dateRememberMe","expiredTimeRememberMe","isRememberMeExpired","dateParse","nowDate","diff","hasCheckRememberMe"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\n\r\nconst getUserStorage = () => {\r\n    const userInfo = localStorage.getItem('userInfo'); //Lấy chuỗi token trên localStorage\r\n    if(!userInfo){\r\n        return {};\r\n    }\r\n    return JSON.parse(userInfo);\r\n}\r\n\r\nconst saveUserStorage = userInfo => {\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n};\r\n\r\nconst parseJwt = token => {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`)\r\n        .join('')\r\n    );\r\n  \r\n    return JSON.parse(jsonPayload);\r\n};\r\n  \r\nconst getUserInfo = () => {\r\n    const userStorage = getUserStorage();\r\n\r\n    if (userStorage.accessToken) {\r\n      const userParse = parseJwt(userStorage.accessToken);\r\n\r\n      return {\r\n        role: 'admin',\r\n        // firstName: userParse.firstName,\r\n        // lastName: userParse.lastName,\r\n        idToken: userStorage.accessToken,\r\n        refreshToken: userStorage.refreshToken,\r\n        exp: userParse.exp,\r\n        email: userParse.user.email,\r\n        status: userParse.user.status,\r\n        id: userParse.user._id\r\n      };\r\n    }\r\n    return {};\r\n};\r\n  \r\nconst checkRememberMe = (e, checked) => {\r\n    const date = moment();\r\n  \r\n    if (checked) {\r\n      return localStorage.setItem('rememberMe', JSON.stringify(date));\r\n    }\r\n  \r\n    return localStorage.removeItem('rememberMe');\r\n};\r\n  \r\nconst checkRememberMeExpired = () => {\r\n    const dateRememberMe = localStorage.getItem('rememberMe');\r\n    const expiredTimeRememberMe = 5; // days\r\n    let isRememberMeExpired = false;\r\n  \r\n    if (dateRememberMe) {\r\n      const dateParse = JSON.parse(dateRememberMe);\r\n      const nowDate = moment();\r\n      isRememberMeExpired =\r\n        nowDate.diff(dateParse, 'days', true) > expiredTimeRememberMe;\r\n    }\r\n  \r\n    return { isRememberMeExpired, hasCheckRememberMe: !!dateRememberMe };\r\n};\r\n  \r\nexport const user = {\r\n    getUserInfo,\r\n    checkRememberMeExpired,\r\n    checkRememberMe,\r\n    saveUserStorage\r\n};"]},"metadata":{},"sourceType":"module"}