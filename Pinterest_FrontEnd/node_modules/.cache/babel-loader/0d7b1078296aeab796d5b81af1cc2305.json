{"ast":null,"code":"var _jsxFileName = \"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/ForgotPassword/ForgotPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useForm } from \"react-hook-form\";\nimport get from \"lodash/get\";\nimport { Link } from \"react-router-dom\";\nimport { authService } from \"../../services/auth.service\";\nimport { Button } from \"../../components/button/button\";\nimport { getMess } from \"../../util/message\";\nimport { patternEmail } from \"../../util/form\";\nimport { Field } from \"../../components/Field/Field\";\nimport { user } from \"../../util/user\";\nimport logoLogin from \"../../assets/image/logo.JPG\";\nimport \"./ForgotPassword.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword(props) {\n  _s();\n\n  var _errors$email;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = get(props, \"history\", {});\n  const stateHistory = history.location.state || {};\n  const [apiError, setApiError] = useState(stateHistory.expired ? getMess(\"M15\") : \"\" // Kiếm tra session timeout chưa\n  );\n  const [resultPassword, setResultPassword] = useState(\"\");\n\n  const onSubmit = formState => {\n    setApiError(\"\");\n    authService.forgotPassword(formState).then(res => {\n      // user.saveUserStorage(res.token);\n      return setResultPassword(res.message); // return history.push(stateHistory.prePath || '/login');\n    }).catch(err => {\n      const requiredNewPassCode = 401;\n\n      if (err.code === requiredNewPassCode) {\n        return history.push(`/change-password/${formState.email}`);\n      }\n\n      return setApiError(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"forgot-password\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"forgot-password-content\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"forgot-password__paper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"forgot-password__form\",\n          noValidate: true,\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoLogin,\n              className: \"forgot-password__logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Forgot Your Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: true,\n              variant: \"body2\",\n              gutterBottom: true,\n              children: \"Enter your email address and we will send your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: apiError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"password-text\",\n            children: resultPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n            variant: \"outlined\",\n            label: \"Email address\",\n            name: \"email\",\n            required: true,\n            inputRef: register({\n              required: getMess(\"M01\", \"Email address\"),\n              pattern: {\n                value: patternEmail,\n                message: getMess(\"M05\")\n              }\n            }),\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Continue\",\n            type: \"submit\",\n            variant: \"contained\",\n            classes: \"button-login\",\n            disableElevation: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"back-to-login-link\",\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Back to Pinterest Web\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"iaQD7I38IlF9oq8lJssAex8tihc=\", false, function () {\n  return [useForm];\n});\n\n_c = ForgotPassword;\nexport { ForgotPassword };\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/ForgotPassword/ForgotPassword.jsx"],"names":["React","useState","Grid","Typography","useForm","get","Link","authService","Button","getMess","patternEmail","Field","user","logoLogin","ForgotPassword","props","register","handleSubmit","errors","history","stateHistory","location","state","apiError","setApiError","expired","resultPassword","setResultPassword","onSubmit","formState","forgotPassword","then","res","message","catch","err","requiredNewPassCode","code","push","email","required","pattern","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport get from \"lodash/get\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authService } from \"../../services/auth.service\";\r\nimport { Button } from \"../../components/button/button\";\r\nimport { getMess } from \"../../util/message\";\r\nimport { patternEmail } from \"../../util/form\";\r\nimport { Field } from \"../../components/Field/Field\";\r\nimport { user } from \"../../util/user\";\r\nimport logoLogin from \"../../assets/image/logo.JPG\";\r\nimport \"./ForgotPassword.scss\";\r\n\r\nfunction ForgotPassword(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = get(props, \"history\", {});\r\n  const stateHistory = history.location.state || {};\r\n\r\n  const [apiError, setApiError] = useState(\r\n    stateHistory.expired ? getMess(\"M15\") : \"\" // Kiếm tra session timeout chưa\r\n  );\r\n  const [resultPassword, setResultPassword] = useState(\"\");\r\n\r\n  const onSubmit = (formState) => {\r\n    setApiError(\"\");\r\n    authService\r\n      .forgotPassword(formState)\r\n      .then((res) => {\r\n        // user.saveUserStorage(res.token);\r\n        return setResultPassword(res.message);\r\n        // return history.push(stateHistory.prePath || '/login');\r\n      })\r\n      .catch((err) => {\r\n        const requiredNewPassCode = 401;\r\n\r\n        if (err.code === requiredNewPassCode) {\r\n          return history.push(`/change-password/${formState.email}`);\r\n        }\r\n\r\n        return setApiError(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"forgot-password\">\r\n      <Grid container className=\"forgot-password-content\">\r\n        <Grid item className=\"forgot-password__paper\">\r\n          <form\r\n            className=\"forgot-password__form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img src={logoLogin} className=\"forgot-password__logo\"></img>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Forgot Your Password?\r\n              </Typography>\r\n              <Typography className variant=\"body2\" gutterBottom>\r\n                Enter your email address and we will send your password\r\n              </Typography>\r\n            </Grid>\r\n            <p className=\"error-text\">{apiError}</p>\r\n            <p className=\"password-text\">{resultPassword}</p>\r\n            <Field\r\n              helperText={errors.email?.message}\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess(\"M01\", \"Email address\"),\r\n                pattern: {\r\n                  value: patternEmail,\r\n                  message: getMess(\"M05\"),\r\n                },\r\n              })}\r\n              notRightLabel\r\n            />\r\n            <Button\r\n              text=\"Continue\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              classes=\"button-login\"\r\n              disableElevation\r\n            />\r\n            <Link className=\"back-to-login-link\" to=\"/login\">\r\n              <p>Back to Pinterest Web</p>\r\n            </Link>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport { ForgotPassword };\r\n"]},"metadata":{},"sourceType":"module"}