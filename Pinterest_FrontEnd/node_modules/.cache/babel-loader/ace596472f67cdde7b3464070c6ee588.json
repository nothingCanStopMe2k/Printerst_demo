{"ast":null,"code":"var _jsxFileName = \"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Register/Verify/Verify.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport get from 'lodash/get'; //_.get(obj, path, [defaultValue]) lấy giá trị của biết obj tại đường dẫn path\n\nimport { useForm } from 'react-hook-form'; //Sử dụng react-hook-form giúp quản lí form dễ hơn\n\nimport { getMess } from '../../../util/message';\nimport { authService } from '../../../services/auth.service';\nimport { user } from '../../../util/user';\nimport { Field } from '../../../components/Field/Field';\nimport { Button } from '../../../components/button/button';\nimport { patternEmail } from '../../../util/form';\nimport Grid from '@material-ui/core/Grid';\nimport { Divider, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { isEmpty } from 'lodash/isEmpty';\nimport './Verify.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Verify(props) {\n  _s();\n\n  var _errors$firstName, _errors$lastName;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = get(props, 'history', {});\n  const stateHistory = history.location.state || {}; //Sẽ lấy giá trị thứ 2 nếu như tham số đầu là falsy\n\n  const [apiError, setApiError] = useState(stateHistory.expired ? getMess('M15') : '');\n  const [profilePhoto, setProfilePhoto] = useState(''); // Preview profilePhoto\n\n  const [file, setFile] = useState('');\n  let userInfo = user.getUserInfo(); //Tương tự componentDidMount\n  // eslint-disable-next-line consistent-return\n  // React.useEffect(() => {\n  //     userInfo = user.getUserInfo();\n  //     const unLogin = isEmpty(userInfo);\n  //     if (!unLogin) {\n  //       if (userInfo.status !== 'defer') return history.push('/');\n  //     }\n  // }, []);\n\n  const onSubmit = formState => {\n    setApiError('');\n    const {\n      email,\n      firstName,\n      lastName,\n      age\n    } = formState;\n    let formData = new FormData();\n    formData.append('profilePhoto', file);\n    formData.append('email', email);\n    formData.append('firstName', firstName);\n    formData.append('lastName', lastName);\n    formData.append('age', age);\n    authService.updateRegisterProfile(formData).then(() => history.push(stateHistory.prePath || '/home')).catch(err => setApiError(err.message));\n  };\n\n  const handleLogout = () => {\n    authService.logout();\n    history.push('/login');\n  };\n\n  const onImageChange = async event => {\n    const file = event.target.files[0]; //Preview profilePhoto\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setProfilePhoto(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    } //setFile\n\n\n    setFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"verify\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"verify-content\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"verify__paper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"verify__form\",\n          noValidate: true,\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: \"title\",\n              children: \"Complete signup below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-avatar\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: profilePhoto,\n                className: \"upload-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"file\",\n                accept: \"image/*\",\n                onChange: onImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: apiError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            variant: \"outlined\",\n            label: \"Email address\",\n            name: \"email\",\n            defaultValue: userInfo.email,\n            disabled: true,\n            inputRef: register({\n              required: getMess('M01', 'Email'),\n              pattern: {\n                value: patternEmail,\n                message: getMess('M05')\n              }\n            }),\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            helperText: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message,\n            label: \"First name\",\n            name: \"firstName\",\n            variant: \"outlined\",\n            required: true,\n            inputRef: register({\n              required: getMess('M01', 'firstName')\n            }),\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            helperText: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message,\n            label: \"Last name\",\n            name: \"lastName\",\n            variant: \"outlined\",\n            inputRef: register({\n              required: getMess('M01', 'lastName')\n            }),\n            required: true,\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            label: \"Age\",\n            name: \"age\",\n            variant: \"outlined\",\n            type: \"number\",\n            inputRef: register({}),\n            notRightLabel: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"By signing up you agree to the Pinterest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"policy-link\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"link\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Terms of User \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 33\n                }, this), \"\\xA0and\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \" Privacy Policy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Continue\",\n              type: \"submit\",\n              variant: \"contained\",\n              classes: \"button-register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"already a user?\",\n              variant: \"contained\",\n              classes: \"button-verify-logout\",\n              onClick: handleLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Verify, \"8PPNpUNhL5nk66+fJwQMuU6JFQQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Verify;\nexport { Verify };\n\nvar _c;\n\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"sources":["/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Register/Verify/Verify.jsx"],"names":["React","useState","useEffect","get","useForm","getMess","authService","user","Field","Button","patternEmail","Grid","Divider","Typography","Link","isEmpty","Verify","props","register","handleSubmit","errors","history","stateHistory","location","state","apiError","setApiError","expired","profilePhoto","setProfilePhoto","file","setFile","userInfo","getUserInfo","onSubmit","formState","email","firstName","lastName","age","formData","FormData","append","updateRegisterProfile","then","push","prePath","catch","err","message","handleLogout","logout","onImageChange","event","target","files","reader","FileReader","onload","readyState","result","readAsDataURL","required","pattern","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport get from 'lodash/get'; //_.get(obj, path, [defaultValue]) lấy giá trị của biết obj tại đường dẫn path\r\nimport { useForm } from 'react-hook-form'; //Sử dụng react-hook-form giúp quản lí form dễ hơn\r\nimport { getMess } from '../../../util/message';\r\nimport { authService } from '../../../services/auth.service';\r\nimport { user } from '../../../util/user';\r\nimport { Field } from '../../../components/Field/Field';\r\nimport { Button } from '../../../components/button/button';\r\nimport { patternEmail } from '../../../util/form';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Divider, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash/isEmpty';\r\nimport './Verify.scss';\r\n\r\nfunction Verify(props) {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const history = get(props, 'history', {});\r\n    const stateHistory = history.location.state || {}; //Sẽ lấy giá trị thứ 2 nếu như tham số đầu là falsy\r\n\r\n    const [apiError, setApiError] = useState(\r\n        stateHistory.expired ? getMess('M15') : ''\r\n    );\r\n    const [profilePhoto, setProfilePhoto] = useState(''); // Preview profilePhoto\r\n    const [file, setFile] = useState('');\r\n\r\n    let userInfo = user.getUserInfo();\r\n    \r\n    //Tương tự componentDidMount\r\n    // eslint-disable-next-line consistent-return\r\n    // React.useEffect(() => {\r\n    //     userInfo = user.getUserInfo();\r\n    //     const unLogin = isEmpty(userInfo);\r\n    //     if (!unLogin) {\r\n    //       if (userInfo.status !== 'defer') return history.push('/');\r\n    //     }\r\n    // }, []);\r\n\r\n    const onSubmit = (formState) => {\r\n        setApiError('');\r\n\r\n        const { email, firstName, lastName, age } = formState;\r\n  \r\n        let formData  =  new FormData();\r\n        formData.append('profilePhoto', file);\r\n        formData.append('email', email);\r\n        formData.append('firstName', firstName);\r\n        formData.append('lastName', lastName);\r\n        formData.append('age', age);\r\n\r\n        authService.updateRegisterProfile(formData)\r\n            .then(() => history.push(stateHistory.prePath || '/home'))\r\n            .catch((err) => setApiError(err.message));\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        authService.logout();\r\n        history.push('/login');\r\n    };\r\n\r\n    const onImageChange = async (event) => {\r\n        const file = event.target.files[0];\r\n\r\n        //Preview profilePhoto\r\n        if(file){\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2) {\r\n                    setProfilePhoto(reader.result);\r\n                }\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n        //setFile\r\n        setFile(file);\r\n    }\r\n\r\n    return (\r\n        <Grid container className=\"verify\">\r\n            <Grid container className=\"verify-content\">\r\n                <Grid item className=\"verify__paper\">\r\n                    <form\r\n                        className=\"verify__form\"\r\n                        noValidate\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                    >\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography variant=\"body2\" className=\"title\">\r\n                                Complete signup below\r\n                            </Typography>\r\n                            <div className=\"upload-avatar\">\r\n                                <img \r\n                                    src={profilePhoto} \r\n                                    className=\"upload-avatar\"/>\r\n                                <input\r\n                                    type=\"file\" id=\"file\" accept=\"image/*\" \r\n                                    onChange={onImageChange}\r\n                                />\r\n                            </div>\r\n                            \r\n                        </Grid>\r\n                        <p className=\"error-text\">{apiError}</p>\r\n                        <Field\r\n                            variant=\"outlined\"\r\n                            label=\"Email address\"\r\n                            name=\"email\"\r\n                            defaultValue={userInfo.email}\r\n                            disabled={true}\r\n                            inputRef={register({\r\n                                required: getMess('M01', 'Email'),\r\n                                pattern: {\r\n                                value: patternEmail,\r\n                                message: getMess('M05'),\r\n                                },\r\n                            })}\r\n                            notRightLabel\r\n                        />\r\n                        <Field\r\n                            helperText={errors.firstName?.message}\r\n                            label=\"First name\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            inputRef={register({\r\n                                required: getMess('M01', 'firstName'),\r\n                            })}\r\n                            notRightLabel\r\n                        />\r\n                        <Field\r\n                            helperText={errors.lastName?.message}\r\n                            label=\"Last name\"\r\n                            name=\"lastName\"\r\n                            variant=\"outlined\"\r\n                            inputRef={register({\r\n                                required: getMess('M01', 'lastName'),\r\n                            })}\r\n                            required\r\n                            notRightLabel\r\n                        />\r\n                        <Field\r\n                            label=\"Age\"\r\n                            name=\"age\"\r\n                            variant=\"outlined\"\r\n                            type=\"number\"\r\n                            inputRef={register({})}\r\n                            notRightLabel\r\n                        />\r\n            \r\n                        <div className=\"policy\">\r\n                            <Typography variant=\"body2\">\r\n                                By signing up you agree to the Pinterest\r\n                            </Typography>\r\n                            <div className=\"policy-link\">\r\n                                <div className=\"link\">\r\n                                <Link to=\"\">\r\n                                    <p>Terms of User </p>\r\n                                </Link>\r\n                                &nbsp;and&nbsp;\r\n                                <Link to=\"\">\r\n                                    <p> Privacy Policy</p>\r\n                                </Link>\r\n                                </div>\r\n                            </div>\r\n                            <Button\r\n                                text=\"Continue\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                classes=\"button-register\"     \r\n                            />\r\n                            <Button\r\n                                text=\"already a user?\"\r\n                                variant=\"contained\"\r\n                                classes=\"button-verify-logout\"\r\n                                onClick={handleLogout}          \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport { Verify };"]},"metadata":{},"sourceType":"module"}