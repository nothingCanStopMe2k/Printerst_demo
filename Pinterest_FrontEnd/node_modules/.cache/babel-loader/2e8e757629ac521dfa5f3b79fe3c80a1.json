{"ast":null,"code":"var _jsxFileName = \"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Field/Field.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NumberFormat from \"react-number-format\";\nimport map from \"lodash/map\";\nimport isEmpty from \"lodash/isEmpty\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Controller } from \"react-hook-form\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { isValidPhoneNumber, allowPositive } from \"../../util/form\";\nimport \"./Field.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Field(props) {\n  const {\n    disabled,\n    defaultValue,\n    options,\n    label,\n    required,\n    helperText,\n    control,\n    // This prop for select input\n    rules,\n    // This prop for select input\n    notRightLabel,\n    typeField,\n    typeInput,\n    layout,\n    ...rest\n  } = props;\n\n  if (typeInput === \"phone\") {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      disabled: disabled,\n      className: \"field\",\n      required: required,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        className: \"MuiInputLabel-shrink\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        as: NumberFormat,\n        thousandSeparator: true,\n        control: control,\n        rules: {\n          validate: isValidPhoneNumber\n        },\n        allowEmptyFormatting: true,\n        customInput: TextField,\n        format: \"+## ## #### ####\",\n        defaultValue: defaultValue,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        className: \"error-text\",\n        children: helperText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (typeInput === \"select\") {\n    const isFieldValidation = !isEmpty(control);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"flex-end\",\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"field-text\",\n        xs: layout.labelCol,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: layout.inputCol,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          disabled: disabled,\n          required: required,\n          className: `field-${typeField} field-select`,\n          fullWidth: true,\n          children: [isFieldValidation ? /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Select, {\n              children: map(options, (option, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                name: option.value,\n                value: option.value,\n                children: option.name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this),\n            rules: rules,\n            control: control,\n            defaultValue: defaultValue,\n            ...rest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: defaultValue,\n            ...rest,\n            children: map(options, (option, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              name: option.value,\n              value: option.value,\n              children: option.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: \"error-text\",\n            children: helperText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"flex-end\",\n    className: \"field\",\n    children: [!notRightLabel && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"field-text\",\n      xs: layout.labelCol,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: notRightLabel ? 12 : layout.inputCol,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: notRightLabel ? label : \"\",\n        inputProps: {\n          readOnly: disabled\n        },\n        defaultValue: defaultValue,\n        fullWidth: true,\n        required: required,\n        error: !!helperText,\n        helperText: helperText,\n        className: `field-${typeField} ${disabled ? \"filed-disable\" : \"\"}`,\n        onChange: e => {\n          if (typeInput === \"number\") {\n            return allowPositive(e);\n          }\n\n          return e;\n        },\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Field;\nField.propTypes = {\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  helperText: PropTypes.string,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  typeField: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })),\n  typeInput: PropTypes.string,\n  label: PropTypes.string,\n  rules: PropTypes.oneOfType([PropTypes.object]),\n  control: PropTypes.oneOfType([PropTypes.object]),\n  notRightLabel: PropTypes.bool,\n  layout: PropTypes.oneOfType([PropTypes.object])\n};\nField.defaultProps = {\n  disabled: false,\n  required: false,\n  helperText: \"\",\n  defaultValue: \"\",\n  typeField: \"primary\",\n  options: [],\n  label: \"\",\n  rules: {},\n  control: {},\n  notRightLabel: false,\n  typeInput: \"text\",\n  layout: {\n    labelCol: 3,\n    inputCol: 9\n  }\n};\nexport { Field };\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Field/Field.jsx"],"names":["React","PropTypes","TextField","Select","MenuItem","NumberFormat","map","isEmpty","InputLabel","FormControl","FormHelperText","Controller","Grid","isValidPhoneNumber","allowPositive","Field","props","disabled","defaultValue","options","label","required","helperText","control","rules","notRightLabel","typeField","typeInput","layout","rest","validate","isFieldValidation","labelCol","inputCol","option","i","value","name","readOnly","e","propTypes","bool","string","oneOfType","number","arrayOf","shape","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport map from \"lodash/map\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { isValidPhoneNumber, allowPositive } from \"../../util/form\";\r\nimport \"./Field.scss\";\r\n\r\nfunction Field(props) {\r\n  const {\r\n    disabled,\r\n    defaultValue,\r\n    options,\r\n    label,\r\n    required,\r\n    helperText,\r\n    control, // This prop for select input\r\n    rules, // This prop for select input\r\n    notRightLabel,\r\n    typeField,\r\n    typeInput,\r\n    layout,\r\n    ...rest\r\n  } = props;\r\n  if (typeInput === \"phone\") {\r\n    return (\r\n      <FormControl disabled={disabled} className=\"field\" required={required}>\r\n        <InputLabel className=\"MuiInputLabel-shrink\">{label}</InputLabel>\r\n        <Controller\r\n          as={NumberFormat}\r\n          thousandSeparator\r\n          control={control}\r\n          rules={{\r\n            validate: isValidPhoneNumber,\r\n          }}\r\n          allowEmptyFormatting\r\n          customInput={TextField}\r\n          format=\"+## ## #### ####\"\r\n          defaultValue={defaultValue}\r\n          {...rest}\r\n        />\r\n        <FormHelperText className=\"error-text\">{helperText}</FormHelperText>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  if (typeInput === \"select\") {\r\n    const isFieldValidation = !isEmpty(control);\r\n    return (\r\n      <Grid container alignItems=\"flex-end\" className=\"field\">\r\n        <Grid item className=\"field-text\" xs={layout.labelCol}>\r\n          <span>{label}</span>\r\n        </Grid>\r\n        <Grid item xs={layout.inputCol}>\r\n          <FormControl\r\n            disabled={disabled}\r\n            required={required}\r\n            className={`field-${typeField} field-select`}\r\n            fullWidth\r\n          >\r\n            {/* <InputLabel id=\"role-required\">{label}</InputLabel> */}\r\n            {isFieldValidation ? (\r\n              <Controller\r\n                as={\r\n                  <Select>\r\n                    {map(options, (option, i) => (\r\n                      <MenuItem\r\n                        name={option.value}\r\n                        key={i}\r\n                        value={option.value}\r\n                      >\r\n                        {option.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                }\r\n                rules={rules}\r\n                control={control}\r\n                defaultValue={defaultValue}\r\n                {...rest}\r\n              />\r\n            ) : (\r\n              <Select defaultValue={defaultValue} {...rest}>\r\n                {map(options, (option, i) => (\r\n                  <MenuItem name={option.value} key={i} value={option.value}>\r\n                    {option.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            )}\r\n            <FormHelperText className=\"error-text\">{helperText}</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container alignItems=\"flex-end\" className=\"field\">\r\n      {!notRightLabel && (\r\n        <Grid item className=\"field-text\" xs={layout.labelCol}>\r\n          <span>{label}</span>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={notRightLabel ? 12 : layout.inputCol}>\r\n        <TextField\r\n          label={notRightLabel ? label : \"\"}\r\n          inputProps={{ readOnly: disabled }}\r\n          defaultValue={defaultValue}\r\n          fullWidth\r\n          required={required}\r\n          error={!!helperText}\r\n          helperText={helperText}\r\n          className={`field-${typeField} ${disabled ? \"filed-disable\" : \"\"}`}\r\n          onChange={(e) => {\r\n            if (typeInput === \"number\") {\r\n              return allowPositive(e);\r\n            }\r\n            return e;\r\n          }}\r\n          {...rest}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nField.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  required: PropTypes.bool,\r\n  helperText: PropTypes.string,\r\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  typeField: PropTypes.string,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  typeInput: PropTypes.string,\r\n  label: PropTypes.string,\r\n  rules: PropTypes.oneOfType([PropTypes.object]),\r\n  control: PropTypes.oneOfType([PropTypes.object]),\r\n  notRightLabel: PropTypes.bool,\r\n  layout: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nField.defaultProps = {\r\n  disabled: false,\r\n  required: false,\r\n  helperText: \"\",\r\n  defaultValue: \"\",\r\n  typeField: \"primary\",\r\n  options: [],\r\n  label: \"\",\r\n  rules: {},\r\n  control: {},\r\n  notRightLabel: false,\r\n  typeInput: \"text\",\r\n  layout: { labelCol: 3, inputCol: 9 },\r\n};\r\n\r\nexport { Field };\r\n"]},"metadata":{},"sourceType":"module"}