[{"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/index.jsx":"1","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/App.js":"2","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Register/Register.jsx":"3","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Detail/Detail.jsx":"4","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/ForgotPassword/ForgotPassword.jsx":"5","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Login/Login.jsx":"6","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/loading/Loading.jsx":"7","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/user.js":"8","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/store.js":"9","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/config/page.js":"10","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/styles/style-common.js":"11","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/public-route/PublicRoute.jsx":"12","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/private-route/PrivateRoute.jsx":"13","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/HomePage/HomePage.jsx":"14","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/not-found/NotFound.jsx":"15","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Header/Header.jsx":"16","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/api/firebase.jsx":"17","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Profile/Profile.jsx":"18","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Register/Verify/Verify.jsx":"19","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/message.js":"20","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/form.js":"21","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/services/auth.service.js":"22","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/button/button.jsx":"23","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Field/Field.jsx":"24","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/reducer.js":"25","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/services/user.service.js":"26","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/api/unsplash.js":"27","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/config/request-url.js":"28","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/services/request.service.js":"29","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/private-route/error-boundary/ErrorBoundary.jsx":"30","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/public-route/error-boundary/ErrorBoundary.jsx":"31","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Post/Post.jsx":"32","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/content/Content.jsx":"33","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/user-image/UserImage.jsx":"34","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/index.js":"35","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/pin/pinReducer.js":"36","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/config/history.js":"37","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/pin/pinActions.js":"38","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Pin/Pin.jsx":"39","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/pin/pinTypes.js":"40","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Detail/styled-components.jsx":"41","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Profile/styled-components.jsx":"42","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/HomePage/scroll.jsx":"43"},{"size":873,"mtime":1619422022985,"results":"44","hashOfConfig":"45"},{"size":3287,"mtime":1619422009503,"results":"46","hashOfConfig":"45"},{"size":4817,"mtime":1619065708307,"results":"47","hashOfConfig":"45"},{"size":600,"mtime":1619423366923,"results":"48","hashOfConfig":"45"},{"size":3526,"mtime":1619065708302,"results":"49","hashOfConfig":"45"},{"size":4345,"mtime":1619065708305,"results":"50","hashOfConfig":"45"},{"size":686,"mtime":1619065708296,"results":"51","hashOfConfig":"45"},{"size":2154,"mtime":1619065708315,"results":"52","hashOfConfig":"45"},{"size":149,"mtime":1619421985068,"results":"53","hashOfConfig":"45"},{"size":1011,"mtime":1619421813014,"results":"54","hashOfConfig":"45"},{"size":273,"mtime":1619065708313,"results":"55","hashOfConfig":"45"},{"size":1476,"mtime":1619419350692,"results":"56","hashOfConfig":"45"},{"size":1278,"mtime":1619419350687,"results":"57","hashOfConfig":"45"},{"size":1030,"mtime":1619423339564,"results":"58","hashOfConfig":"45"},{"size":632,"mtime":1619065708297,"results":"59","hashOfConfig":"45"},{"size":8126,"mtime":1619422061410,"results":"60","hashOfConfig":"45"},{"size":526,"mtime":1619419350621,"results":"61","hashOfConfig":"45"},{"size":3208,"mtime":1619421969106,"results":"62","hashOfConfig":"45"},{"size":7807,"mtime":1619065708308,"results":"63","hashOfConfig":"45"},{"size":1342,"mtime":1619065708315,"results":"64","hashOfConfig":"45"},{"size":612,"mtime":1619065708314,"results":"65","hashOfConfig":"45"},{"size":629,"mtime":1619065708312,"results":"66","hashOfConfig":"45"},{"size":451,"mtime":1619329627273,"results":"67","hashOfConfig":"45"},{"size":5206,"mtime":1619065708289,"results":"68","hashOfConfig":"45"},{"size":138,"mtime":1619419361788,"results":"69","hashOfConfig":"45"},{"size":417,"mtime":1619419350711,"results":"70","hashOfConfig":"45"},{"size":222,"mtime":1619419350622,"results":"71","hashOfConfig":"45"},{"size":457,"mtime":1619065708301,"results":"72","hashOfConfig":"45"},{"size":2447,"mtime":1619065708312,"results":"73","hashOfConfig":"45"},{"size":1174,"mtime":1619419350690,"results":"74","hashOfConfig":"45"},{"size":1174,"mtime":1619419350693,"results":"75","hashOfConfig":"45"},{"size":2660,"mtime":1619421936229,"results":"76","hashOfConfig":"45"},{"size":730,"mtime":1619421855155,"results":"77","hashOfConfig":"45"},{"size":322,"mtime":1619421273927,"results":"78","hashOfConfig":"45"},{"size":42,"mtime":1619065708309,"results":"79","hashOfConfig":"45"},{"size":371,"mtime":1619422071024,"results":"80","hashOfConfig":"45"},{"size":99,"mtime":1619065708300,"results":"81","hashOfConfig":"45"},{"size":211,"mtime":1619065708310,"results":"82","hashOfConfig":"45"},{"size":1935,"mtime":1619422389245,"results":"83","hashOfConfig":"45"},{"size":34,"mtime":1619065708311,"results":"84","hashOfConfig":"45"},{"size":793,"mtime":1619421571982,"results":"85","hashOfConfig":"45"},{"size":1806,"mtime":1619421171812,"results":"86","hashOfConfig":"45"},{"size":952,"mtime":1619423323266,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1ukh3z6",{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/index.jsx",[],["188","189"],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/App.js",["190","191","192","193","194"],"import React, { useState, useEffect } from \"react\";\nimport map from \"lodash/map\"; // Tạo ra một mảng các giá trị bằng cách for các phần tử\nimport isEmpty from \"lodash/isEmpty\"; //Kiểm tra gtri truyền vào có trống ko (boolean)\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; //Kiếm tra Runtime cho React-prop hoặc object tương tự\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport { pagesHasPermission, pagesNotHasPermission } from \"./config/page\";\nimport { PrivateRoute } from \"./components/private-route/PrivateRoute\";\nimport { PublicRoute } from \"./components/public-route/PublicRoute\";\nimport { user } from \"./util/user\"; //Liên quan đến token của user trên localStorage\nimport { NotFound } from \"./components/not-found/NotFound\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport { Verify } from \"./pages/Register/Verify/Verify\"; //Trang xác nhận sau khi Register\nimport { Profile } from \"./pages/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport { Detail } from \"./pages/Detail/Detail\";\nimport {\n  colorPrimary,\n  colorSecondary,\n  colorPrimaryTypo,\n  colorSecondaryTypo,\n} from \"./styles/style-common\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: colorPrimary },\n    secondary: { main: colorSecondary },\n  },\n  text: {\n    primary: colorPrimaryTypo,\n    secondary: colorSecondaryTypo,\n  },\n  typography: {\n    fontFamily: '\"Lato\", \"Helvetica\", \"Arial\"',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n});\n\nconst components = {\n  HomePage,\n  Verify,\n  Profile,\n  Detail,\n};\n\nfunction App({ history, ...rest }) {\n  const [isVerifyPage, setIsVerifyPage] = React.useState(false);\n  const [pins, setNewPins] = useState([]);\n\n  React.useEffect(() => {\n    const isVerify = window.location.pathname === \"/verify\";\n    setIsVerifyPage(isVerify);\n  }, [window.location.pathname]);\n\n  //Kiểm tra xem user có đăng nhập trước đó hay không\n  const redirectHomePage = () => {\n    const userInfo = user.getUserInfo();\n\n    if (isEmpty(userInfo)) {\n      return <Redirect to=\"/login\" />;\n    }\n    return <Redirect to=\"/home\" />;\n  };\n\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"root-content full-height\">\n          {!isVerifyPage && <Header history={history} {...rest} />}\n          <Switch>\n            <Route exact path=\"/\" render={() => redirectHomePage()} />\n            {map(pagesHasPermission, (page) => {\n              return (\n                <PrivateRoute\n                  key={page.component}\n                  path={page.path}\n                  component={components[page.component]}\n                  exact\n                />\n              );\n            })}\n\n            <PublicRoute path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nApp.propTypes = {\n  history: PropTypes.instanceOf(Object),\n};\n\nApp.defaultProps = {\n  history: {},\n};\n\nexport default App;\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Register/Register.jsx",["195","196"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useForm } from 'react-hook-form';\r\nimport get from 'lodash/get';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { authService } from '../../services/auth.service';\r\nimport { Button } from '../../components/button/button';\r\nimport { patternEmail } from '../../util/form';\r\nimport { getMess } from '../../util/message';\r\nimport { Field } from '../../components/Field/Field';\r\nimport { user } from '../../util/user';\r\nimport logoLogin from '../../assets/image/pinterest_PNG40.png';\r\nimport './Register.scss';\r\n\r\n\r\nfunction Register(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = get(props, 'history', {});\r\n  const stateHistory = history.location.state || {};\r\n\r\n  const [apiError, setApiError] = useState(\r\n    stateHistory.expired ? getMess('M15') : ''\r\n  );\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  //Tương tự componentDidMount.\r\n  React.useEffect(() => {\r\n    const userInfo = user.getUserInfo();\r\n    const unLogin = isEmpty(userInfo);\r\n    if (!unLogin) {\r\n      if (userInfo.status === 'defer') return history.push('/verify');\r\n      return history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = formState => {\r\n    authService.register(formState)\r\n      .then(() => {\r\n        authService\r\n          .login(formState)\r\n          .then(res => {\r\n            user.saveUserStorage(res.token);\r\n            return history.push('/verify', formState);\r\n          })\r\n          .catch(err => {\r\n            const requiredNewPassword = 401;\r\n\r\n            if (err.code === requiredNewPassword) {\r\n              return history.push(`/change-password/${formState.email}`);\r\n            }\r\n\r\n            return setApiError(err.message);\r\n          })\r\n      }).catch(err => {\r\n        if (err.code === 400) {\r\n          setApiError('That email address is already registered!!');\r\n        }\r\n        else if(err.code === 405){\r\n          setApiError('These passwords do not match!!');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"register\">\r\n      <Grid container className=\"register-content\">\r\n        <Grid item className=\"register__paper\">\r\n          <form\r\n            className=\"register__form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img src={logoLogin} className=\"logo\"></img>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Create Your Account!\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                No credit card required\r\n              </Typography>\r\n            </Grid>\r\n            <p className=\"error-text\">{apiError}</p>\r\n            <Field\r\n              helperText={errors.email?.message}\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              notRightLabel\r\n              required\r\n              inputRef={register({\r\n                required: getMess('M01', 'Email address'),\r\n                pattern: {\r\n                  value: patternEmail,\r\n                  message: getMess('M05'),\r\n                },\r\n              })}\r\n            />\r\n\r\n            <Field\r\n              helperText={errors.password?.message}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess('M01', 'Password'),\r\n              })}\r\n              notRightLabel\r\n            />\r\n\r\n            <Field\r\n              helperText={errors.password?.message}\r\n              label=\"Confirm password\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              variant=\"outlined\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess('M01', 'Password'),\r\n              })}\r\n              notRightLabel\r\n            />\r\n            <Button\r\n              text=\"Continue\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              classes=\"button-register\"\r\n              disableElevation\r\n            />\r\n            <div className=\"log-in-link\" >\r\n              <div>\r\n                Already have an account?&nbsp;\r\n                <Link to=\"/login\">\r\n                  <p>Log in</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport { Register };\r\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Detail/Detail.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/ForgotPassword/ForgotPassword.jsx",["197","198"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport get from \"lodash/get\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authService } from \"../../services/auth.service\";\r\nimport { Button } from \"../../components/button/button\";\r\nimport { getMess } from \"../../util/message\";\r\nimport { patternEmail } from \"../../util/form\";\r\nimport { Field } from \"../../components/Field/Field\";\r\nimport { user } from \"../../util/user\";\r\nimport logoLogin from \"../../assets/image/logo.JPG\";\r\nimport \"./ForgotPassword.scss\";\r\n\r\nfunction ForgotPassword(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = get(props, \"history\", {});\r\n  const stateHistory = history.location.state || {};\r\n\r\n  const [apiError, setApiError] = useState(\r\n    stateHistory.expired ? getMess(\"M15\") : \"\" // Kiếm tra session timeout chưa\r\n  );\r\n  const [resultPassword, setResultPassword] = useState(\"\");\r\n\r\n  const onSubmit = (formState) => {\r\n    setApiError(\"\");\r\n    authService\r\n      .forgotPassword(formState)\r\n      .then((res) => {\r\n        // user.saveUserStorage(res.token);\r\n        return setResultPassword(res.message);\r\n        // return history.push(stateHistory.prePath || '/login');\r\n      })\r\n      .catch((err) => {\r\n        const requiredNewPassCode = 401;\r\n\r\n        if (err.code === requiredNewPassCode) {\r\n          return history.push(`/change-password/${formState.email}`);\r\n        }\r\n\r\n        return setApiError(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"forgot-password\">\r\n      <Grid container className=\"forgot-password-content\">\r\n        <Grid item className=\"forgot-password__paper\">\r\n          <form\r\n            className=\"forgot-password__form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img src={logoLogin} className=\"forgot-password__logo\"></img>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Forgot Your Password?\r\n              </Typography>\r\n              <Typography className variant=\"body2\" gutterBottom>\r\n                Enter your email address and we will send your password\r\n              </Typography>\r\n            </Grid>\r\n            <p className=\"error-text\">{apiError}</p>\r\n            <p className=\"password-text\">{resultPassword}</p>\r\n            <Field\r\n              helperText={errors.email?.message}\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess(\"M01\", \"Email address\"),\r\n                pattern: {\r\n                  value: patternEmail,\r\n                  message: getMess(\"M05\"),\r\n                },\r\n              })}\r\n              notRightLabel\r\n            />\r\n            <Button\r\n              text=\"Continue\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              classes=\"button-login\"\r\n              disableElevation\r\n            />\r\n            <Link className=\"back-to-login-link\" to=\"/login\">\r\n              <p>Back to Pinterest Web</p>\r\n            </Link>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport { ForgotPassword };\r\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Login/Login.jsx",["199","200"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport get from \"lodash/get\"; //get(obj, path, [defaultValue])\r\nimport { Link } from \"react-router-dom\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { authService } from \"../../services/auth.service\"; //Các mothod liên quan đến gọi api ở backend\r\nimport { Button } from \"../../components/button/button\";\r\nimport { getMess } from \"../../util/message\"; //Liên quan đến các messenger thông báo\r\nimport { patternEmail } from \"../../util/form\"; //Liên quan về phần vidation mail\r\nimport { Field } from \"../../components/Field/Field\";\r\nimport { user } from \"../../util/user\"; //\r\nimport logo from \"../../assets/image/logo.JPG\"; //logo\r\nimport \"./Login.scss\";\r\n\r\nfunction Login(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = get(props, \"history\", {});\r\n  const stateHistory = history.location.state || {};\r\n\r\n  const [apiError, setApiError] = useState(\r\n    stateHistory.expired ? getMess(\"M15\") : \"\"\r\n  );\r\n\r\n  //Tương tự componentDidMount\r\n  useEffect(() => {\r\n    const userInfo = user.getUserInfo();\r\n    const unLogin = isEmpty(userInfo);\r\n    if (!unLogin) {\r\n      if (userInfo.status === \"defer\") return history.push(\"/verify\");\r\n      return history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (formState) => {\r\n    setApiError(\"\");\r\n\r\n    authService\r\n      .login(formState)\r\n      .then((res) => {\r\n        user.saveUserStorage(res.token);\r\n        console.log(\"StateHistory: \", stateHistory.prePath );\r\n        return history.push(stateHistory.prePath || \"/home\");\r\n      })\r\n      .catch((err) => {\r\n        const requiredNewPassCode = 401;\r\n\r\n        if (err.code === requiredNewPassCode) {\r\n          return history.push(`/change-password/${formState.email}`);\r\n        }\r\n\r\n        return setApiError(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"login\">\r\n      <Grid container className=\"login-content\">\r\n        <Grid item className=\"login__paper\">\r\n          <form\r\n            className=\"login__form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img src={logo} className=\"logo\"></img>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Welcome Back!\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                \"\"\r\n              </Typography>\r\n            </Grid>\r\n            <p className=\"error-text\">{apiError}</p>\r\n            <Field\r\n              helperText={errors.email?.message}\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess(\"M01\", \"Email address\"),\r\n                pattern: {\r\n                  value: patternEmail,\r\n                  message: getMess(\"M05\"),\r\n                },\r\n              })}\r\n              notRightLabel\r\n            />\r\n\r\n            <Field\r\n              helperText={errors.password?.message}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              inputRef={register({\r\n                required: getMess(\"M01\", \"Password\"),\r\n              })}\r\n              notRightLabel\r\n            />\r\n            <Link className=\"forgot-password-link\" to=\"/forgotpassword\">\r\n              <p>Forgot password?</p>\r\n            </Link>\r\n            <Button\r\n              text=\"Continue\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              classes=\"button-login\"\r\n              disableElevation\r\n            />\r\n            <div className=\"register-link\">\r\n              Don&apos;t have an account?&nbsp;\r\n              <Link to=\"/register\">\r\n                <p>Sign up</p>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/loading/Loading.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/user.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/store.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/config/page.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/styles/style-common.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/public-route/PublicRoute.jsx",["201"],"import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport isEmpty from \"lodash/isEmpty\";\nimport find from \"lodash/find\";\nimport ErrorBoundary from \"./error-boundary/ErrorBoundary\";\nimport { user } from \"../../util/user\";\nimport { routesWithRoles } from \"../../config/page\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const userInfo = user.getUserInfo();\n  const unLogin = isEmpty(userInfo);\n  const { path } = rest;\n  const hasPermission = !!find(\n    routesWithRoles[userInfo.role],\n    (route) => route === path\n  );\n\n  const userStatus = userInfo.status === \"defer\";\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (unLogin) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { prePath: window.location.pathname },\n              }}\n            />\n          );\n        }\n        if (userStatus) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/verify\",\n                state: { prePath: window.location.pathname },\n              }}\n            />\n          );\n        }\n        return (\n          <ErrorBoundary>\n            <Component {...props} />\n          </ErrorBoundary>\n        );\n      }}\n    />\n  );\n};\n\nPublicRoute.defaultProps = {\n  component: null,\n};\nPublicRoute.propTypes = {\n  component: PropTypes.func,\n};\n\nexport { PublicRoute };\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/private-route/PrivateRoute.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/HomePage/HomePage.jsx",["202"],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/not-found/NotFound.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Header/Header.jsx",["203","204","205","206","207"],"import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport PinterestIcon from \"@material-ui/icons/Pinterest\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport KeyboardArrowIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport Poper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { Avatar } from \"@material-ui/core\";\n\nimport { pinterestScreenRight } from \"../../config/page\";\nimport { authService } from \"../../services/auth.service\";\nimport { userService } from \"../../services/user.service\";\n\nimport { user } from \"../../util/user\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/get\";\nimport map from \"lodash/map\";\nimport \"./Header.scss\";\nimport unsplash from \"../../api/unsplash\";\nimport { apiPins } from \"../../redux\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 56px;\n  padding: 12px 4px 4px 12px;\n  background-color: white;\n  color: black;\n`;\n\nconst LogoWrapper = styled.div`\n  .MuiSvgIcon-root {\n    color: #e60023;\n    font-size: 32px;\n    cursor: pointer;\n    display: flex;\n  }\n`;\n\nconst Button = styled.div`\n  display: flex;\n  height: 48px;\n  min-width: 123px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 24px;\n  cursor: pointer;\n`;\n\nconst HomePageButton = styled(Button)`\n  background-color: rgb(17, 17, 17);\n  a {\n    text-decoration: none;\n    color: white;\n    font-weight: 700;\n  }\n`;\n\nconst FollowingButton = styled(Button)`\n  background-color: white;\n  a {\n    text-decoration: none;\n    color: white;\n    font-weight: 700;\n  }\n  :hover {\n    background-color: #e1e1e1;\n  }\n`;\n\nconst SearchWrapper = styled.div`\n  flex: 1;\n`;\n\nconst SearchBarWrapper = styled.div`\n  background-color: #efefef;\n  display: flex;\n  height: 40px;\n  width: 100%;\n  border-radius: 50px;\n  border: none;\n  padding-left: 10px;\n\n  form {\n    display: flex;\n    flex: 1;\n  }\n\n  form > input {\n    background-color: transparent;\n    border: none;\n    width: 100%;\n    margin-left: 5px;\n    font-size: 16px;\n  }\n\n  form > button {\n    display: none;\n  }\n\n  input:focus {\n    outline: none;\n  }\n`;\n\nconst IconsWrapper = styled.div``;\n\nconst Header = (props) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [userProfile, setUserProfile] = useState();\n  const anchorRef = React.useRef(null); //useReflà một hàm trả về một đối tượng ref có thể thay đổi (Refs truy cập các nút DOM trong React)\n  // const [pins, setNewPins] = useState([]);\n  let pins = [];\n  const [input, setInput] = useState(\"\");\n\n  const getImages = (term) => {\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: { query: term },\n    });\n  };\n\n  const getImagesFromPixabay = (term) => {\n    return axios.get(\n      `https://pixabay.com/api/?key=21224893-c61153f1d9b5a52314e204800`,\n      {\n        params: { q: term },\n      }\n    );\n  };\n\n  const onSearchSubmit = async (e) => {\n    e.preventDefault();\n    await getImages(input).then((res) => {\n      let results = res.data.results;\n      let newPins = [...results];\n      newPins.sort(() => {\n        return 0.5 - Math.random();\n      });\n      pins = newPins;\n    });\n    console.log(\"Pins search: \", pins);\n    props.apiPins(pins);\n    return props.history.push(\"/home\");\n  };\n\n  const onSearchSubmitPixabay = async (e) => {\n    e.preventDefault();\n    await getImagesFromPixabay(input).then((res) => {\n      let results = res.data.results;\n      let newPins = [...results];\n      newPins.sort(() => {\n        return 0.5 - Math.random();\n      });\n      pins = newPins;\n    });\n    console.log(\"Pins search: \", pins);\n    props.apiPins(pins);\n    return props.history.push(\"/home\");\n  };\n\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let inpit = [\"piano\", \"code\", \"plane\"];\n    inpit.forEach((pinTerm) => {\n      promises.push(\n        getImages(pinTerm).then((res) => {\n          let results = res.data.results;\n          pinData = pinData.concat(results);\n          pinData.sort(function (a, b) {\n            return 0.5 - Math.random();\n          });\n        })\n      );\n    });\n    return Promise.all(promises).then(() => {\n      pins = pinData;\n    });\n  };\n\n  useEffect(async () => {\n    //Lấy ảnh đại diện\n    getNewPins().then(() => {\n      // console.log(\"Pins lúc này: \", pins);\n      props.apiPins(pins);\n    });\n    userService\n      .getProfile()\n      .then((res) => {\n        setUserProfile(res);\n      })\n      .catch((err) => {});\n  }, []);\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const clickAnyway = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleLogout = () => {\n    authService.logout();\n    props.history.push(\"/login\");\n  };\n\n  const handleClose = (path) => {\n    toggleMenu();\n    if (path !== \"/signout\") {\n      props.history.push(path);\n    } else handleLogout();\n  };\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <PinterestIcon />\n      </LogoWrapper>\n      <HomePageButton>\n        <a href=\"/\">Homepage</a>\n      </HomePageButton>\n      <FollowingButton>\n        <a href=\"/\">Following</a>\n      </FollowingButton>\n      <SearchWrapper>\n        <SearchBarWrapper>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <form>\n            <input type=\"text\" onChange={(e) => setInput(e.target.value)} />\n            <button type=\"submit\" onClick={onSearchSubmit}></button>\n          </form>\n        </SearchBarWrapper>\n      </SearchWrapper>\n      <IconsWrapper>\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n        <IconButton>\n          <TextsmsIcon />\n        </IconButton>\n        <IconButton onClick={() => props.history.push(\"/profile\")}>\n          {!userProfile ? (\n            <FaceIcon />\n          ) : (\n            <Avatar\n              style={{ height: 30, width: 30 }}\n              src={userProfile.profilePhoto}\n            ></Avatar>\n          )}\n        </IconButton>\n        <IconButton onClick={toggleMenu}>\n          <div ref={anchorRef} onClick={toggleMenu}>\n            <KeyboardArrowIcon className=\"header-user-profile\" />\n          </div>\n        </IconButton>\n      </IconsWrapper>\n      <Poper\n        open={isMenuOpen}\n        transition\n        anchorEl={anchorRef.current}\n        disablePortal\n        className=\"poper\"\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={clickAnyway}>\n                <MenuList>\n                  {map(pinterestScreenRight, (nav) => {\n                    return (\n                      <MenuItem\n                        key={nav.path}\n                        onClick={() => handleClose(nav.path)}\n                      >\n                        {nav.name}\n                      </MenuItem>\n                    );\n                  })}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Poper>\n    </Wrapper>\n  );\n};\n\nHeader.propTypes = {\n  history: PropTypes.instanceOf(Object),\n};\n\nHeader.defaultProps = {\n  history: {},\n};\n\n//Phan cua redux\nconst mapStateToProps = (state) => {\n  return {\n    pins: state.pins,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    apiPins: (pins) => dispatch(apiPins(pins)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/api/firebase.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Profile/Profile.jsx",["208","209"],"import React, { useState, useEffect } from \"react\";\nimport { userService } from \"../../services/user.service\";\nimport { user } from \"../../util/user\";\nimport { getMess } from \"../../util/message\";\nimport get from \"lodash/get\";\n\nimport UserImage from \"../../components/user-image/UserImage\";\nimport map from \"lodash/map\";\n\nimport {\n  ImageContainer,\n  Content,\n  HR,\n  AccountInformationItem,\n  AccountInformation,\n  AccountInformationText,\n  Header,\n  AvatarContainer,\n  Avatar,\n  Information,\n  UserInformation,\n  UserInformationText,\n  Container,\n} from \"./styled-components\";\n\nfunction Profile(props) {\n  const [userProfile, setUserProfile] = useState({});\n  const [userPhotos, setUserPhotos] = useState([]);\n\n  const history = get(props, \"history\", {});\n  const stateHistory = history.location.state || {};\n  const [apiError, setApiError] = useState(\n    stateHistory.expired ? getMess(\"M15\") : \"\"\n  );\n  //thêm apiError để xác nhận 2 cái. getPhotos với get Profile\n\n  useEffect(async () => {\n    //Lấy ảnh đại diện\n    userService\n      .getProfile()\n      .then((res) => {\n        setUserProfile(res);\n      })\n      .catch((err) => {\n        if (err === 400) setApiError(\"Load fail!!!\");\n        else setApiError(err.message);\n      });\n\n    //Lấy ảnh mà user đó đã đăng\n    userService\n      .getPhotos()\n      .then((res) => {\n        setUserPhotos(res);\n      })\n      .catch((err) => {\n        if (err === 400) setApiError(\"Not found any photo!!!\");\n        else setApiError(err.message);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <p className=\"error\">{apiError}</p>\n      <Header>\n        <AvatarContainer>\n          <Avatar src={userProfile.profilePhoto} />\n        </AvatarContainer>\n\n        <Information>\n          <UserInformation>\n            <UserInformationText>\n              {userProfile.firstName} {userProfile.lastName}\n            </UserInformationText>\n            <UserInformationText>{userProfile.email}</UserInformationText>\n          </UserInformation>\n\n          <AccountInformation>\n            <AccountInformationItem>\n              <AccountInformationText>\n                <strong>0</strong>\n              </AccountInformationText>\n              <AccountInformationText>Followers</AccountInformationText>\n            </AccountInformationItem>\n            <AccountInformationItem>\n              <AccountInformationText>\n                <strong>0</strong>\n              </AccountInformationText>\n              <AccountInformationText>Reacts</AccountInformationText>\n            </AccountInformationItem>\n            <AccountInformationItem>\n              <AccountInformationText>\n                <strong>{userPhotos.length}</strong>\n              </AccountInformationText>\n              <AccountInformationText>Pictures</AccountInformationText>\n            </AccountInformationItem>\n          </AccountInformation>\n        </Information>\n      </Header>\n\n      <HR />\n\n      <Content>\n        <h1>My pictures </h1>\n        <ImageContainer>\n          {map(userPhotos, (photo) => {\n            return <UserImage link={photo.link} />;\n          })}\n        </ImageContainer>\n      </Content>\n    </Container>\n  );\n}\n\nexport { Profile };\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Register/Verify/Verify.jsx",["210","211","212","213"],"import React, { useState, useEffect } from 'react';\r\nimport get from 'lodash/get'; //_.get(obj, path, [defaultValue]) lấy giá trị của biết obj tại đường dẫn path\r\nimport { useForm } from 'react-hook-form'; //Sử dụng react-hook-form giúp quản lí form dễ hơn\r\nimport { getMess } from '../../../util/message';\r\nimport { authService } from '../../../services/auth.service';\r\nimport { user } from '../../../util/user';\r\nimport { Field } from '../../../components/Field/Field';\r\nimport { Button } from '../../../components/button/button';\r\nimport { patternEmail } from '../../../util/form';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Divider, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash/isEmpty';\r\nimport './Verify.scss';\r\n\r\nfunction Verify(props) {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const history = get(props, 'history', {});\r\n    const stateHistory = history.location.state || {}; //Sẽ lấy giá trị thứ 2 nếu như tham số đầu là falsy\r\n\r\n    const [apiError, setApiError] = useState(\r\n        stateHistory.expired ? getMess('M15') : ''\r\n    );\r\n    const [profilePhoto, setProfilePhoto] = useState(''); // Preview profilePhoto\r\n    const [file, setFile] = useState('');\r\n\r\n    let userInfo = user.getUserInfo();\r\n    \r\n    //Tương tự componentDidMount\r\n    // eslint-disable-next-line consistent-return\r\n    // React.useEffect(() => {\r\n    //     userInfo = user.getUserInfo();\r\n    //     const unLogin = isEmpty(userInfo);\r\n    //     if (!unLogin) {\r\n    //       if (userInfo.status !== 'defer') return history.push('/');\r\n    //     }\r\n    // }, []);\r\n\r\n    const onSubmit = (formState) => {\r\n        setApiError('');\r\n\r\n        const { email, firstName, lastName, age } = formState;\r\n  \r\n        let formData  =  new FormData();\r\n        formData.append('profilePhoto', file);\r\n        formData.append('email', email);\r\n        formData.append('firstName', firstName);\r\n        formData.append('lastName', lastName);\r\n        formData.append('age', age);\r\n\r\n        authService.updateRegisterProfile(formData)\r\n            .then(() => history.push(stateHistory.prePath || '/home'))\r\n            .catch((err) => setApiError(err.message));\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        authService.logout();\r\n        history.push('/login');\r\n    };\r\n\r\n    const onImageChange = async (event) => {\r\n        const file = event.target.files[0];\r\n\r\n        //Preview profilePhoto\r\n        if(file){\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2) {\r\n                    setProfilePhoto(reader.result);\r\n                }\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n        //setFile\r\n        setFile(file);\r\n    }\r\n\r\n    return (\r\n        <Grid container className=\"verify\">\r\n            <Grid container className=\"verify-content\">\r\n                <Grid item className=\"verify__paper\">\r\n                    <form\r\n                        className=\"verify__form\"\r\n                        noValidate\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                    >\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography variant=\"body2\" className=\"title\">\r\n                                Complete signup below\r\n                            </Typography>\r\n                            <div className=\"upload-avatar\">\r\n                                <img \r\n                                    src={profilePhoto} \r\n                                    className=\"upload-avatar\"/>\r\n                                <input\r\n                                    type=\"file\" id=\"file\" accept=\"image/*\" \r\n                                    onChange={onImageChange}\r\n                                />\r\n                            </div>\r\n                            \r\n                        </Grid>\r\n                        <p className=\"error-text\">{apiError}</p>\r\n                        <Field\r\n                            variant=\"outlined\"\r\n                            label=\"Email address\"\r\n                            name=\"email\"\r\n                            defaultValue={userInfo.email}\r\n                            disabled={true}\r\n                            inputRef={register({\r\n                                required: getMess('M01', 'Email'),\r\n                                pattern: {\r\n                                value: patternEmail,\r\n                                message: getMess('M05'),\r\n                                },\r\n                            })}\r\n                            notRightLabel\r\n                        />\r\n                        <Field\r\n                            helperText={errors.firstName?.message}\r\n                            label=\"First name\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            inputRef={register({\r\n                                required: getMess('M01', 'firstName'),\r\n                            })}\r\n                            notRightLabel\r\n                        />\r\n                        <Field\r\n                            helperText={errors.lastName?.message}\r\n                            label=\"Last name\"\r\n                            name=\"lastName\"\r\n                            variant=\"outlined\"\r\n                            inputRef={register({\r\n                                required: getMess('M01', 'lastName'),\r\n                            })}\r\n                            required\r\n                            notRightLabel\r\n                        />\r\n                        <Field\r\n                            label=\"Age\"\r\n                            name=\"age\"\r\n                            variant=\"outlined\"\r\n                            type=\"number\"\r\n                            inputRef={register({})}\r\n                            notRightLabel\r\n                        />\r\n            \r\n                        <div className=\"policy\">\r\n                            <Typography variant=\"body2\">\r\n                                By signing up you agree to the Pinterest\r\n                            </Typography>\r\n                            <div className=\"policy-link\">\r\n                                <div className=\"link\">\r\n                                <Link to=\"\">\r\n                                    <p>Terms of User </p>\r\n                                </Link>\r\n                                &nbsp;and&nbsp;\r\n                                <Link to=\"\">\r\n                                    <p> Privacy Policy</p>\r\n                                </Link>\r\n                                </div>\r\n                            </div>\r\n                            <Button\r\n                                text=\"Continue\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                classes=\"button-register\"     \r\n                            />\r\n                            <Button\r\n                                text=\"already a user?\"\r\n                                variant=\"contained\"\r\n                                classes=\"button-verify-logout\"\r\n                                onClick={handleLogout}          \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport { Verify };","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/message.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/util/form.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/services/auth.service.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/button/button.jsx",["214"],"import React from \"react\";\r\nimport ButtonMaterial from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./button.scss\";\r\n\r\nfunction Button({ text, variant, classes, ...otherProps }) {\r\n  return (\r\n    <ButtonMaterial variant={variant} className={classes} {...otherProps}>\r\n      {text}\r\n    </ButtonMaterial>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  text: \"\",\r\n  variant: \"contained\",\r\n  classes: \"\",\r\n};\r\n\r\nexport { Button };\r\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Field/Field.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/reducer.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/services/user.service.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/api/unsplash.js",["215"],"import axios from \"axios\";\nimport React from \"react\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com\",\n  headers: {\n    Authorization: \"Client-ID USlO7ONMxpaG7ffnkl-6vgw2cAAQv6nEaXqNoSJuuHc\",\n  },\n});\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/config/request-url.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/services/request.service.js",["216"],"import { trackPromise } from \"react-promise-tracker\";\r\nimport axios from \"axios\";\r\nimport { user } from '../util/user';\r\nimport constant from \"lodash/constant\";\r\nimport history from \"../config/history\";\r\nimport { requestUrl } from \"../config/request-url\";\r\n//\r\n\r\nconst DEF_HEADERS = {\r\n  // Accept: \"application/json\",\r\n  // \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_ENDPOINT; // http://localhost:5000 ở backend\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n\r\nconst createServerResponse = (res) => ({ status: res.status, data: res.data });\r\n\r\nconst logout = () => {\r\n  localStorage.clear();\r\n  history.push('/login', { prePath: window.location.pathname, expired: true });\r\n};\r\n\r\nconst post = (path = \"\", body = {}, headers = DEF_HEADERS) =>\r\n  trackPromise(\r\n    axiosInstance\r\n      .post(path, body, { headers })\r\n      .then((res) => res.data)\r\n      .catch((err) => Promise.reject(err.response ? err.response.data : err))\r\n  );\r\n\r\nconst get = (path = '', params = {}, headers = DEF_HEADERS) =>\r\n  trackPromise(\r\n    axiosInstance\r\n      .get(path, { headers, params })\r\n      .then(res => res.data)\r\n      .catch(err => Promise.reject(err.response ? err.response.data : err)),\r\n  );\r\n\r\nconst refreshToken = payload =>\r\naxios\r\n  .post(BASE_URL + requestUrl.auth, payload, {\r\n    headers: DEF_HEADERS,\r\n  })\r\n  .then(res => res.data)\r\n  .catch(() => constant(''));\r\n\r\nconst requestHandler = async request => {\r\n  const userInfo = user.getUserInfo();\r\n\r\n  if (userInfo.idToken) {\r\n    let token = userInfo.idToken;\r\n    const remainTokenTime = userInfo.exp - new Date().getTime() / 1000;\r\n    const timeToRefreshToken = 300; // seconds\r\n\r\n    if (remainTokenTime < 0) {\r\n      logout();\r\n      throw new axios.Cancel('err');\r\n    }\r\n\r\n    if (remainTokenTime < timeToRefreshToken) {\r\n      const payload = {\r\n        refreshToken: userInfo.refreshToken,\r\n        username: userInfo.email,\r\n      };\r\n      const newToken = await refreshToken(payload);\r\n\r\n      if (!newToken) {\r\n        logout();\r\n        throw new axios.Cancel('err');\r\n      }\r\n\r\n      user.saveUserStorage(newToken);\r\n      token = newToken.idToken;\r\n    }\r\n\r\n    request.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  return request;\r\n};\r\n\r\naxiosInstance.interceptors.request.use(requestHandler); //Lien quan den viec chan lai trc khi den backend\r\n\r\nexport const requestService = { post, get };\r\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/private-route/error-boundary/ErrorBoundary.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/public-route/error-boundary/ErrorBoundary.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Post/Post.jsx",["217","218","219","220","221","222","223"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { get } from \"lodash/get\";\nimport { IconButton } from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nimport { user } from \"../../util/user\";\nimport { getMess } from \"../../util/message\";\nimport { userService } from \"../../services/user.service\";\n\nimport \"./Post.scss\";\n\nconst Post = ({ isPostOpen, closePost }) => {\n  const [file, setFile] = useState(\"\");\n  const [file1, setFile1] = useState(\"\");\n  const [imagePreviewUrl, setImg] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const { register, handleSubmit } = useForm();\n\n  const handleImageChange = (e) => {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(file);\n      setImg(reader.result);\n    };\n\n    setFile1(e.target.files[0]);\n    reader.readAsDataURL(file);\n  };\n\n  useEffect(async () => {\n    let userInfo = user.getUserInfo();\n    setUserID(userInfo.id);\n    console.log(userID);\n  }, []);\n\n  const onSubmit = (data) => {\n    // setApiError('');\n\n    const { status, file } = data;\n\n    let formData = new FormData();\n    formData.append(\"userID\", userID);\n    formData.append(\"status\", status);\n    formData.append(\"linkFile\", file1);\n\n    console.log(formData);\n    userService.post(formData);\n    // authService.updateRegisterProfile(formData)\n    //     .then(() => history.push(stateHistory.prePath || '/home'))\n    //     .catch((err) => setApiError(err.message));\n  };\n\n  let $imagePreview = imagePreviewUrl ? (\n    <span className=\"imgPreview\">\n      <img src={imagePreviewUrl} />\n    </span>\n  ) : (\n    \"\"\n  );\n\n  return isPostOpen ? (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <section>\n        <div className=\"text\">\n          <h1 className=\"post-title\">Create Post</h1>\n          <span className=\"close\" onClick={closePost}>\n            <IconButton>\n              <CancelIcon fontSize=\"large\" />\n            </IconButton>\n          </span>\n          <hr />\n          <img src=\"http://placehold.it/100/100\" />\n          <textarea\n            name=\"status\"\n            ref={register}\n            placeholder=\"What's in your mind\"\n          ></textarea>\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            ref={register}\n            name=\"file\"\n            onChange={(e) => handleImageChange(e)}\n          />\n          {$imagePreview}\n          <input type=\"submit\" value=\"post\" />\n        </div>\n      </section>\n      <div class=\"overlay\"></div>\n    </form>\n  ) : (\n    \"\"\n  );\n};\n\nexport default Post;\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/content/Content.jsx",["224"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport Pin from \"../Pin/Pin\";\nimport \"./Content.css\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  display: flex;\n  margin: 15px auto;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: white;\n`;\n\nconst Content = () => {\n  const pins = useSelector((state) => state.pins);\n\n  return (\n    <Wrapper>\n      <Container className=\"content__container\">\n        {pins.map((pin, index) => {\n          let { urls } = pin;\n          return <Pin key={index} urls={urls} />;\n        })}\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Content;\n","/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/user-image/UserImage.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/index.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/pin/pinReducer.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/config/history.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/pin/pinActions.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/components/Pin/Pin.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/redux/pin/pinTypes.js",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Detail/styled-components.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/Profile/styled-components.jsx",[],"/media/tuan/F6C4CFA0C4CF620B/Printerst_demo/Pinterest_FrontEnd/src/pages/HomePage/scroll.jsx",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"233","line":11,"column":30,"nodeType":"231","messageId":"232","endLine":11,"endColumn":51},{"ruleId":"229","severity":1,"message":"234","line":55,"column":10,"nodeType":"231","messageId":"232","endLine":55,"endColumn":14},{"ruleId":"229","severity":1,"message":"235","line":55,"column":16,"nodeType":"231","messageId":"232","endLine":55,"endColumn":26},{"ruleId":"236","severity":1,"message":"237","line":60,"column":6,"nodeType":"238","endLine":60,"endColumn":32,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":36,"column":6,"nodeType":"238","endLine":36,"endColumn":8,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":81,"column":15,"nodeType":"244","endLine":81,"endColumn":53},{"ruleId":"229","severity":1,"message":"245","line":12,"column":10,"nodeType":"231","messageId":"232","endLine":12,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":61,"column":15,"nodeType":"244","endLine":61,"endColumn":70},{"ruleId":"236","severity":1,"message":"246","line":34,"column":6,"nodeType":"238","endLine":34,"endColumn":8,"suggestions":"247"},{"ruleId":"242","severity":1,"message":"243","line":72,"column":15,"nodeType":"244","endLine":72,"endColumn":48},{"ruleId":"229","severity":1,"message":"248","line":14,"column":9,"nodeType":"231","messageId":"232","endLine":14,"endColumn":22},{"ruleId":"229","severity":1,"message":"230","line":1,"column":20,"nodeType":"231","messageId":"232","endLine":1,"endColumn":29},{"ruleId":"229","severity":1,"message":"245","line":24,"column":10,"nodeType":"231","messageId":"232","endLine":24,"endColumn":14},{"ruleId":"229","severity":1,"message":"249","line":26,"column":8,"nodeType":"231","messageId":"232","endLine":26,"endColumn":11},{"ruleId":"229","severity":1,"message":"250","line":158,"column":9,"nodeType":"231","messageId":"232","endLine":158,"endColumn":30},{"ruleId":"236","severity":1,"message":"251","line":193,"column":13,"nodeType":"252","endLine":205,"endColumn":4},{"ruleId":"236","severity":1,"message":"253","line":205,"column":6,"nodeType":"238","endLine":205,"endColumn":8,"suggestions":"254"},{"ruleId":"229","severity":1,"message":"245","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":14},{"ruleId":"236","severity":1,"message":"251","line":37,"column":13,"nodeType":"252","endLine":59,"endColumn":4},{"ruleId":"229","severity":1,"message":"230","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"255","line":11,"column":10,"nodeType":"231","messageId":"232","endLine":11,"endColumn":17},{"ruleId":"229","severity":1,"message":"256","line":13,"column":10,"nodeType":"231","messageId":"232","endLine":13,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":97,"column":33,"nodeType":"244","endLine":99,"endColumn":64},{"ruleId":"229","severity":1,"message":"257","line":3,"column":8,"nodeType":"231","messageId":"232","endLine":3,"endColumn":17},{"ruleId":"229","severity":1,"message":"258","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":13},{"ruleId":"229","severity":1,"message":"259","line":21,"column":7,"nodeType":"231","messageId":"232","endLine":21,"endColumn":27},{"ruleId":"229","severity":1,"message":"249","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":13},{"ruleId":"229","severity":1,"message":"260","line":8,"column":10,"nodeType":"231","messageId":"232","endLine":8,"endColumn":17},{"ruleId":"229","severity":1,"message":"261","line":14,"column":10,"nodeType":"231","messageId":"232","endLine":14,"endColumn":14},{"ruleId":"236","severity":1,"message":"251","line":35,"column":13,"nodeType":"252","endLine":39,"endColumn":4},{"ruleId":"236","severity":1,"message":"262","line":39,"column":6,"nodeType":"238","endLine":39,"endColumn":8,"suggestions":"263"},{"ruleId":"229","severity":1,"message":"261","line":44,"column":21,"nodeType":"231","messageId":"232","endLine":44,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":70,"column":11,"nodeType":"244","endLine":70,"endColumn":52},{"ruleId":"229","severity":1,"message":"230","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'pagesNotHasPermission' is defined but never used.","'pins' is assigned a value but never used.","'setNewPins' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["266"],"React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["267"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["268"],"'hasPermission' is assigned a value but never used.","'get' is defined but never used.","'onSearchSubmitPixabay' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getNewPins', 'pins', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["269"],"'Divider' is defined but never used.","'isEmpty' is defined but never used.","'PropTypes' is defined but never used.","'React' is defined but never used.","'createServerResponse' is assigned a value but never used.","'getMess' is defined but never used.","'file' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["270"],"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: []",{"range":"280","text":"281"},"Update the dependencies array to be: [history]",{"range":"282","text":"283"},{"range":"284","text":"283"},"Update the dependencies array to be: [getNewPins, pins, props]",{"range":"285","text":"286"},"Update the dependencies array to be: [userID]",{"range":"287","text":"288"},[2065,2091],"[]",[1321,1323],"[history]",[1414,1416],[5007,5009],"[getNewPins, pins, props]",[1085,1087],"[userID]"]